// generated from rosidl_adapter/resource/srv.idl.em
// with input from ue_msgs/srv/GetEntityState.srv
// generated code does not contain a copyright notice

#include "ue_msgs/msg/EntityState.idl"

module ue_msgs {
  module srv {
    struct GetEntityState_Request {
      @verbatim (language="comment", text=
        " Entity's scoped name." "\n"
        " An entity can be a model, link, collision, light, etc." "\n"
        " Be sure to use gazebo scoped naming notation (e.g.)")
      @unit (value="model_name::link_name")
      string name;

      @verbatim (language="comment", text=
        " Return pose and twist relative to this entity." "\n"
        " Leaving empty or \"world\" will use inertial world frame.")
      string reference_frame;
    };
    struct GetEntityState_Response {
      @verbatim (language="comment", text=
        " Contains pose and twist.")
      ue_msgs::msg::EntityState state;

      @verbatim (language="comment", text=
        " Return true if get was successful. If false, the state contains garbage.")
      boolean success;
    };
  };
};
