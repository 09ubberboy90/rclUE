// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from example_interfaces/action/Fibonacci.action - do not modify

#include "Actions/ROS2FibonacciAction.h"

const rosidl_action_type_support_t* UROS2FibonacciAction::GetTypeSupport() const
{
    return ROSIDL_GET_ACTION_TYPE_SUPPORT(example_interfaces, Fibonacci);
}

void UROS2FibonacciAction::Init()
{
    Super::Init();
    example_interfaces__action__Fibonacci_SendGoal_Request__init(&Fibonacci_goal_request);
    example_interfaces__action__Fibonacci_SendGoal_Response__init(&Fibonacci_goal_response);
    example_interfaces__action__Fibonacci_GetResult_Request__init(&Fibonacci_result_request);
    example_interfaces__action__Fibonacci_GetResult_Response__init(&Fibonacci_result_response);
    example_interfaces__action__Fibonacci_FeedbackMessage__init(&Fibonacci_feedback_message);
}

void UROS2FibonacciAction::Fini()
{
    example_interfaces__action__Fibonacci_SendGoal_Request__fini(&Fibonacci_goal_request);
    example_interfaces__action__Fibonacci_SendGoal_Response__fini(&Fibonacci_goal_response);
    example_interfaces__action__Fibonacci_GetResult_Request__fini(&Fibonacci_result_request);
    example_interfaces__action__Fibonacci_GetResult_Response__fini(&Fibonacci_result_response);
    example_interfaces__action__Fibonacci_FeedbackMessage__fini(&Fibonacci_feedback_message);
    Super::Fini();
}

void UROS2FibonacciAction::SetGoalRequest(const FROSFibonacciSendGoalRequest& Goal)
{
    Goal.SetROS2(Fibonacci_goal_request);
}

void UROS2FibonacciAction::GetGoalRequest(FROSFibonacciSendGoalRequest& Goal) const
{
    Goal.SetFromROS2(Fibonacci_goal_request);
}

void UROS2FibonacciAction::SetGoalResponse(const FROSFibonacciSendGoalResponse& Goal)
{
    Goal.SetROS2(Fibonacci_goal_response);
}

void UROS2FibonacciAction::GetGoalResponse(FROSFibonacciSendGoalResponse& Goal) const
{
    Goal.SetFromROS2(Fibonacci_goal_response);
}

void UROS2FibonacciAction::SetResultRequest(const FROSFibonacciGetResultRequest& Result)
{
    Result.SetROS2(Fibonacci_result_request);
}

void UROS2FibonacciAction::GetResultRequest(FROSFibonacciGetResultRequest& Result) const
{
    Result.SetFromROS2(Fibonacci_result_request);
}

void UROS2FibonacciAction::SetResultResponse(const FROSFibonacciGetResultResponse& Result)
{
    Result.SetROS2(Fibonacci_result_response);
}

void UROS2FibonacciAction::GetResultResponse(FROSFibonacciGetResultResponse& Result) const
{
    Result.SetFromROS2(Fibonacci_result_response);
}


void UROS2FibonacciAction::SetFeedback(const FROSFibonacciFeedbackMessage& Feedback)
{
    Feedback.SetROS2(Fibonacci_feedback_message);
}

void UROS2FibonacciAction::GetFeedback(FROSFibonacciFeedbackMessage& Feedback) const
{
    Feedback.SetFromROS2(Fibonacci_feedback_message);
}

void UROS2FibonacciAction::SetGoalIdToFeedback(FROSFibonacciFeedbackMessage& Feedback)
{
    for (int i = 0; i < 16; i++)
    {
        Feedback.GoalId[i] = Fibonacci_goal_request.goal_id.uuid[i];
    }
}

void* UROS2FibonacciAction::GetGoalRequest()
{
    return &Fibonacci_goal_request;
}

void* UROS2FibonacciAction::GetGoalResponse()
{
    return &Fibonacci_goal_response;
}

void* UROS2FibonacciAction::GetResultRequest()
{
    return &Fibonacci_result_request;
}

void* UROS2FibonacciAction::GetResultResponse()
{
    return &Fibonacci_result_response;
}

void* UROS2FibonacciAction::GetFeedbackMessage()
{
    return &Fibonacci_feedback_message;
}