// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from ue_msgs/SimShutDown.action - do not modify

#pragma once

#include <CoreMinimal.h>

#include "unique_identifier_msgs/msg/uuid.h"
#include "ue_msgs/action/sim_shut_down.h"
#include "action_msgs/srv/cancel_goal.h"

#include "Actions/ROS2GenericAction.h"
#include "rclcUtilities.h"

#include "ROS2SimShutDownAction.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSSimShutDown_SendGoal_Request
{
	GENERATED_BODY()

public:
  	TArray<uint, TFixedAllocator<16>> goal_id;
	

	void SetFromROS2(const ue_msgs__action__SimShutDown_SendGoal_Request& in_ros_data)
	{
		for (int i=0; i<16; i++)
		{
			goal_id[i] = in_ros_data.goal_id.uuid[i];
		}

    	
	}

	void SetROS2(ue_msgs__action__SimShutDown_SendGoal_Request& out_ros_data) const
	{
		for (int i=0; i<16; i++)
		{
			out_ros_data.goal_id.uuid[i] = goal_id[i];
		}

    	
	}
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSimShutDown_SendGoal_Response
{
	GENERATED_BODY()

public:
	bool accepted;
	int stamp_sec;
	uint stamp_nanosec;

	void SetFromROS2(const ue_msgs__action__SimShutDown_SendGoal_Response& in_ros_data)
	{
    	accepted = in_ros_data.accepted;
		stamp_sec = in_ros_data.stamp.sec;
		stamp_nanosec = in_ros_data.stamp.nanosec;
	}

	void SetROS2(ue_msgs__action__SimShutDown_SendGoal_Response& out_ros_data) const
	{
    	out_ros_data.accepted = accepted;
		out_ros_data.stamp.sec = stamp_sec;
		out_ros_data.stamp.nanosec = stamp_nanosec;
	}
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSimShutDown_GetResult_Request
{
	GENERATED_BODY()

public:
  	TArray<uint, TFixedAllocator<16>> goal_id;

	void SetFromROS2(const ue_msgs__action__SimShutDown_GetResult_Request& in_ros_data)
	{
		for (int i=0; i<16; i++)
		{
			goal_id[i] = in_ros_data.goal_id.uuid[i];
		}

	}

	void SetROS2(ue_msgs__action__SimShutDown_GetResult_Request& out_ros_data) const
	{
		for (int i=0; i<16; i++)
		{
			out_ros_data.goal_id.uuid[i] = goal_id[i];
		}
	}
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSimShutDown_GetResult_Response
{
	GENERATED_BODY()

public:
	int8 status;
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	bool success;

	

	void SetFromROS2(const ue_msgs__action__SimShutDown_GetResult_Response& in_ros_data)
	{
		status = in_ros_data.status;
    	success = in_ros_data.result.success;

		
	}

	void SetROS2(ue_msgs__action__SimShutDown_GetResult_Response& out_ros_data) const
	{
		out_ros_data.status = status;
    	out_ros_data.result.success = success;

		
	}
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSimShutDown_FeedbackMessage
{
	GENERATED_BODY()

public:
  	TArray<uint, TFixedAllocator<16>> goal_id;
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	bool done;

	

	void SetFromROS2(const ue_msgs__action__SimShutDown_FeedbackMessage& in_ros_data)
	{
		for (int i=0; i<16; i++)
		{
			goal_id[i] = in_ros_data.goal_id.uuid[i];
		}

    	done = in_ros_data.feedback.done;

		
	}

	void SetROS2(ue_msgs__action__SimShutDown_FeedbackMessage& out_ros_data) const
	{
		for (int i=0; i<16; i++)
		{
			out_ros_data.goal_id.uuid[i] = goal_id[i];
		}
		
    	out_ros_data.feedback.done = done;

		
	}
};

UCLASS()
class RCLUE_API UROS2SimShutDownAction : public UROS2GenericAction
{
	GENERATED_BODY()
	
public:
	virtual void Init() override;

	virtual void Fini() override;

	virtual const rosidl_action_type_support_t* GetTypeSupport() const override;

  	UFUNCTION(BlueprintCallable)
	void SetGoalRequest(const FROSSimShutDown_SendGoal_Request& Goal);

  	UFUNCTION(BlueprintCallable)
	void GetGoalRequest(FROSSimShutDown_SendGoal_Request& Goal) const;
	
  	UFUNCTION(BlueprintCallable)
	void SetGoalResponse(const FROSSimShutDown_SendGoal_Response& Goal);

  	UFUNCTION(BlueprintCallable)
	void GetGoalResponse(FROSSimShutDown_SendGoal_Response& Goal) const;
	
  	UFUNCTION(BlueprintCallable)
	void SetResultRequest(const FROSSimShutDown_GetResult_Request& Result);

  	UFUNCTION(BlueprintCallable)
	void GetResultRequest(FROSSimShutDown_GetResult_Request& Result) const;
	
  	UFUNCTION(BlueprintCallable)
	void SetResultResponse(const FROSSimShutDown_GetResult_Response& Result);

  	UFUNCTION(BlueprintCallable)
	void GetResultResponse(FROSSimShutDown_GetResult_Response& Result) const;



  	UFUNCTION(BlueprintCallable)
	void SetFeedback(const FROSSimShutDown_FeedbackMessage& Feedback);

  	UFUNCTION(BlueprintCallable)
	void GetFeedback(FROSSimShutDown_FeedbackMessage& Feedback) const;
	
	virtual void* GetGoalRequest() override;
	virtual void* GetGoalResponse() override;
	virtual void* GetResultRequest() override;
	virtual void* GetResultResponse() override;
	virtual void* GetFeedbackMessage() override;

private:
	ue_msgs__action__SimShutDown_SendGoal_Request SimShutDown_goal_request;
	ue_msgs__action__SimShutDown_SendGoal_Response SimShutDown_goal_response;
	ue_msgs__action__SimShutDown_GetResult_Request SimShutDown_result_request;
	ue_msgs__action__SimShutDown_GetResult_Response SimShutDown_result_response;
	ue_msgs__action__SimShutDown_FeedbackMessage SimShutDown_feedback_message;
};