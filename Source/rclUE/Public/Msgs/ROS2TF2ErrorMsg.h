// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from tf2_msgs/msg/TF2Error.msg - do not modify

#pragma once

#include <CoreMinimal.h>

#include "tf2_msgs/msg/tf2_error.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2TF2ErrorMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSTF2Error
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	uint8 Error = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString ErrorString;

	

	void SetFromROS2(const tf2_msgs__msg__TF2Error& in_ros_data)
	{
    	Error = in_ros_data.error;

		ErrorString.AppendChars(in_ros_data.error_string.data, in_ros_data.error_string.size);

		
	}

	void SetROS2(tf2_msgs__msg__TF2Error& out_ros_data) const
	{
    	out_ros_data.error = Error;

		{
			FTCHARToUTF8 strUtf8( *ErrorString );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.error_string.data != nullptr)
		{
			free(out_ros_data.error_string.data);
		}
		out_ros_data.error_string.data = (decltype(out_ros_data.error_string.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.error_string.data)));
		memcpy(out_ros_data.error_string.data, TCHAR_TO_UTF8(*ErrorString), (strLength+1)*sizeof(char));
			out_ros_data.error_string.size = strLength;
			out_ros_data.error_string.capacity = strLength + 1;
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2TF2ErrorMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSTF2Error& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSTF2Error& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	tf2_msgs__msg__TF2Error tf2_error_msg;
};