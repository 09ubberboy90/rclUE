// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from geometry_msgs/TwistWithCovariance.msg - do not modify

#pragma once

#include "CoreMinimal.h"

#include "geometry_msgs/msg/twist_with_covariance.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2TwistWithCovarianceMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSTwistWithCovariance
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FVector twist_linear;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FVector twist_angular;

	TArray<double> covariance;

	

	void SetFromROS2(const geometry_msgs__msg__TwistWithCovariance& in_ros_data)
	{
    	twist_linear.X = in_ros_data.twist.linear.x;
		twist_linear.Y = in_ros_data.twist.linear.y;
		twist_linear.Z = in_ros_data.twist.linear.z;

		twist_angular.X = in_ros_data.twist.angular.x;
		twist_angular.Y = in_ros_data.twist.angular.y;
		twist_angular.Z = in_ros_data.twist.angular.z;

		for (int i = 0; i < 36; i++)
		{
			covariance[i] = in_ros_data.covariance[i];
		}

		
	}

	void SetROS2(geometry_msgs__msg__TwistWithCovariance& out_ros_data) const
	{
    	out_ros_data.twist.linear.x = twist_linear.X;
		out_ros_data.twist.linear.y = twist_linear.Y;
		out_ros_data.twist.linear.z = twist_linear.Z;

		out_ros_data.twist.angular.x = twist_angular.X;
		out_ros_data.twist.angular.y = twist_angular.Y;
		out_ros_data.twist.angular.z = twist_angular.Z;

		for (int i = 0; i < 36; i++)
		{
			out_ros_data.covariance[i] = covariance[i];
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2TwistWithCovarianceMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSTwistWithCovariance& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSTwistWithCovariance& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	geometry_msgs__msg__TwistWithCovariance twist_with_covariance_msg;
};