// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from actionlib_msgs/msg/GoalStatus.msg - do not modify

#pragma once

#include <CoreMinimal.h>

#include "actionlib_msgs/msg/goal_status.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2GoalStatusMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSGoalStatus
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int GoalIdStampSec = 0;

	UPROPERTY(EditAnywhere)
	unsigned int GoalIdStampNanosec = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString GoalIdId;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	uint8 Status = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString Text;

	

	void SetFromROS2(const actionlib_msgs__msg__GoalStatus& in_ros_data)
	{
    	GoalIdStampSec = in_ros_data.goal_id.stamp.sec;

		GoalIdStampNanosec = in_ros_data.goal_id.stamp.nanosec;

		GoalIdId.AppendChars(in_ros_data.goal_id.id.data, in_ros_data.goal_id.id.size);

		Status = in_ros_data.status;

		Text.AppendChars(in_ros_data.text.data, in_ros_data.text.size);

		
	}

	void SetROS2(actionlib_msgs__msg__GoalStatus& out_ros_data) const
	{
    	out_ros_data.goal_id.stamp.sec = GoalIdStampSec;

		out_ros_data.goal_id.stamp.nanosec = GoalIdStampNanosec;

		{
			FTCHARToUTF8 strUtf8( *GoalIdId );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.goal_id.id.data != nullptr)
		{
			free(out_ros_data.goal_id.id.data);
		}
		out_ros_data.goal_id.id.data = (decltype(out_ros_data.goal_id.id.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.goal_id.id.data)));
		memcpy(out_ros_data.goal_id.id.data, TCHAR_TO_UTF8(*GoalIdId), (strLength+1)*sizeof(char));
			out_ros_data.goal_id.id.size = strLength;
			out_ros_data.goal_id.id.capacity = strLength + 1;
		}

		out_ros_data.status = Status;

		{
			FTCHARToUTF8 strUtf8( *Text );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.text.data != nullptr)
		{
			free(out_ros_data.text.data);
		}
		out_ros_data.text.data = (decltype(out_ros_data.text.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.text.data)));
		memcpy(out_ros_data.text.data, TCHAR_TO_UTF8(*Text), (strLength+1)*sizeof(char));
			out_ros_data.text.size = strLength;
			out_ros_data.text.capacity = strLength + 1;
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2GoalStatusMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSGoalStatus& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSGoalStatus& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	actionlib_msgs__msg__GoalStatus goal_status_msg;
};