// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from example_interfaces/msg/MultiArrayLayout.msg - do not modify

#pragma once

#include <CoreMinimal.h>

#include "example_interfaces/msg/multi_array_layout.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2MultiArrayLayoutMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSMultiArrayLayout
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> DimLabel;

	UPROPERTY(EditAnywhere)
	TArray<unsigned int> DimSize;

	UPROPERTY(EditAnywhere)
	TArray<unsigned int> DimStride;

	UPROPERTY(EditAnywhere)
	unsigned int DataOffset = 0;

	

	void SetFromROS2(const example_interfaces__msg__MultiArrayLayout& in_ros_data)
	{
    	for (auto i = 0; i < in_ros_data.dim.size; ++i)
		{
			DimLabel.Emplace("");
			DimLabel[i].AppendChars(in_ros_data.dim.data[i].label.data,in_ros_data.dim.data[i].label.size);
		}

		for (auto i = 0; i < in_ros_data.dim.size; ++i)
		{
			DimSize.Emplace(in_ros_data.dim.data[i].size);
		}

		for (auto i = 0; i < in_ros_data.dim.size; ++i)
		{
			DimStride.Emplace(in_ros_data.dim.data[i].stride);
		}

		DataOffset = in_ros_data.data_offset;

		
	}

	void SetROS2(example_interfaces__msg__MultiArrayLayout& out_ros_data) const
	{
    	if (out_ros_data.dim.data != nullptr)
		{
			free(out_ros_data.dim.data);
		}
		out_ros_data.dim.data = (decltype(out_ros_data.dim.data))malloc(DimLabel.Num() * (sizeof(DimLabel) + sizeof(DimSize) + sizeof(DimStride)));
		out_ros_data.dim.size = DimLabel.Num();
		out_ros_data.dim.capacity = DimLabel.Num();
		for (auto i = 0; i < DimLabel.Num(); ++i)
		{
			{
				FTCHARToUTF8 strUtf8( *DimLabel[i] );
			int32 strLength = strUtf8.Length();
				out_ros_data.dim.data[i].label.data = (decltype(out_ros_data.dim.data[i].label.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.dim.data[i].label.data)));
		memcpy(out_ros_data.dim.data[i].label.data, TCHAR_TO_UTF8(*DimLabel[i]), (strLength+1)*sizeof(char));
				out_ros_data.dim.data[i].label.size = strLength;
				out_ros_data.dim.data[i].label.capacity = strLength + 1;
			}

			out_ros_data.dim.data[i].size = DimSize[i];

			out_ros_data.dim.data[i].stride = DimStride[i];

			}
	out_ros_data.data_offset = DataOffset;

		
	}
};

UCLASS()
class RCLUE_API UROS2MultiArrayLayoutMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSMultiArrayLayout& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSMultiArrayLayout& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	example_interfaces__msg__MultiArrayLayout multi_array_layout_msg;
};