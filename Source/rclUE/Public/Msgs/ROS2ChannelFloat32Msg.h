// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/ChannelFloat32.msg - do not modify

#pragma once

#include "CoreMinimal.h"

#include "sensor_msgs/msg/channel_float32.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2ChannelFloat32Msg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSChannelFloat32
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString name;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<float> values;

	

	void SetFromROS2(sensor_msgs__msg__ChannelFloat32 rosdata)
	{
    	name.AppendChars(rosdata.name.data, rosdata.name.size);

		for (int i = 0; i < rosdata.values.size; i++)
		{
			values[i] = rosdata.values.data[i];
		}

		
	}

	void SetROS2(sensor_msgs__msg__ChannelFloat32& rosdata) const
	{
    	if (rosdata.name.data != nullptr)
		{
			free(rosdata.name.data);
		}
		rosdata.name.data = (char*)malloc((name.Len()+1)*sizeof(char));
		memcpy(rosdata.name.data, TCHAR_TO_ANSI(*name), (name.Len()+1)*sizeof(char));
		rosdata.name.size = name.Len();
		rosdata.name.capacity = name.Len() + 1;

		for (int i = 0; i < values.Num(); i++)
		{
			rosdata.values.data[i] = values[i];
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2ChannelFloat32Msg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSChannelFloat32 Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSChannelFloat32& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	sensor_msgs__msg__ChannelFloat32 channel_float32_msg;
};