// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/msg/CameraInfo.msg - do not modify

#pragma once

#include <CoreMinimal.h>

#include "sensor_msgs/msg/camera_info.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2CameraInfoMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSCameraInfo
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int HeaderStampSec = 0;

	UPROPERTY(EditAnywhere)
	unsigned int HeaderStampNanosec = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString HeaderFrameId;

	UPROPERTY(EditAnywhere)
	unsigned int Height = 0;

	UPROPERTY(EditAnywhere)
	unsigned int Width = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString DistortionModel;

	UPROPERTY(EditAnywhere)
	TArray<double> D;

	UPROPERTY(EditAnywhere)
	TArray<double> K;

	UPROPERTY(EditAnywhere)
	TArray<double> R;

	UPROPERTY(EditAnywhere)
	TArray<double> P;

	UPROPERTY(EditAnywhere)
	unsigned int BinningX = 0;

	UPROPERTY(EditAnywhere)
	unsigned int BinningY = 0;

	UPROPERTY(EditAnywhere)
	unsigned int RoiXOffset = 0;

	UPROPERTY(EditAnywhere)
	unsigned int RoiYOffset = 0;

	UPROPERTY(EditAnywhere)
	unsigned int RoiHeight = 0;

	UPROPERTY(EditAnywhere)
	unsigned int RoiWidth = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	bool RoibDoRectify = false;

	

	void SetFromROS2(const sensor_msgs__msg__CameraInfo& in_ros_data)
	{
    	HeaderStampSec = in_ros_data.header.stamp.sec;

		HeaderStampNanosec = in_ros_data.header.stamp.nanosec;

		HeaderFrameId.AppendChars(in_ros_data.header.frame_id.data, in_ros_data.header.frame_id.size);

		Height = in_ros_data.height;

		Width = in_ros_data.width;

		DistortionModel.AppendChars(in_ros_data.distortion_model.data, in_ros_data.distortion_model.size);

		for (auto i = 0; i < in_ros_data.d.size; ++i)
		{
			D.Emplace(in_ros_data.d.data[i]);
		}

		for (auto i = 0; i < 9; ++i)
		{
			K.Emplace(in_ros_data.k[i]);
		}

		for (auto i = 0; i < 9; ++i)
		{
			R.Emplace(in_ros_data.r[i]);
		}

		for (auto i = 0; i < 12; ++i)
		{
			P.Emplace(in_ros_data.p[i]);
		}

		BinningX = in_ros_data.binning_x;

		BinningY = in_ros_data.binning_y;

		RoiXOffset = in_ros_data.roi.x_offset;

		RoiYOffset = in_ros_data.roi.y_offset;

		RoiHeight = in_ros_data.roi.height;

		RoiWidth = in_ros_data.roi.width;

		RoibDoRectify = in_ros_data.roi.do_rectify;

		
	}

	void SetROS2(sensor_msgs__msg__CameraInfo& out_ros_data) const
	{
    	out_ros_data.header.stamp.sec = HeaderStampSec;

		out_ros_data.header.stamp.nanosec = HeaderStampNanosec;

		{
			FTCHARToUTF8 strUtf8( *HeaderFrameId );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.header.frame_id.data != nullptr)
		{
			free(out_ros_data.header.frame_id.data);
		}
		out_ros_data.header.frame_id.data = (decltype(out_ros_data.header.frame_id.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.header.frame_id.data)));
		memcpy(out_ros_data.header.frame_id.data, TCHAR_TO_UTF8(*HeaderFrameId), (strLength+1)*sizeof(char));
			out_ros_data.header.frame_id.size = strLength;
			out_ros_data.header.frame_id.capacity = strLength + 1;
		}

		out_ros_data.height = Height;

		out_ros_data.width = Width;

		{
			FTCHARToUTF8 strUtf8( *DistortionModel );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.distortion_model.data != nullptr)
		{
			free(out_ros_data.distortion_model.data);
		}
		out_ros_data.distortion_model.data = (decltype(out_ros_data.distortion_model.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.distortion_model.data)));
		memcpy(out_ros_data.distortion_model.data, TCHAR_TO_UTF8(*DistortionModel), (strLength+1)*sizeof(char));
			out_ros_data.distortion_model.size = strLength;
			out_ros_data.distortion_model.capacity = strLength + 1;
		}

		if (out_ros_data.d.data != nullptr)
		{
			free(out_ros_data.d.data);
		}
		out_ros_data.d.data = (decltype(out_ros_data.d.data))malloc((D.Num())*sizeof(decltype(*out_ros_data.d.data)));
		
		for (auto i = 0; i < D.Num(); ++i)
		{
			out_ros_data.d.data[i] = D[i];
		}

		out_ros_data.d.size = D.Num();
		out_ros_data.d.capacity = D.Num();

		for (auto i = 0; i < 9; ++i)
		{
			out_ros_data.k[i] = K[i];
		}

		for (auto i = 0; i < 9; ++i)
		{
			out_ros_data.r[i] = R[i];
		}

		for (auto i = 0; i < 12; ++i)
		{
			out_ros_data.p[i] = P[i];
		}

		out_ros_data.binning_x = BinningX;

		out_ros_data.binning_y = BinningY;

		out_ros_data.roi.x_offset = RoiXOffset;

		out_ros_data.roi.y_offset = RoiYOffset;

		out_ros_data.roi.height = RoiHeight;

		out_ros_data.roi.width = RoiWidth;

		out_ros_data.roi.do_rectify = RoibDoRectify;

		
	}
};

UCLASS()
class RCLUE_API UROS2CameraInfoMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSCameraInfo& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSCameraInfo& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	sensor_msgs__msg__CameraInfo camera_info_msg;
};