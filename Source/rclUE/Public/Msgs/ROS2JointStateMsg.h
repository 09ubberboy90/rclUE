// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/JointState.msg - do not modify

#pragma once

#include "CoreMinimal.h"

#include "sensor_msgs/msg/joint_state.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2JointStateMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSJointState
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int header_stamp_sec;

	unsigned int header_stamp_nanosec;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString header_frame_id;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> name;

	TArray<double> position;

	TArray<double> velocity;

	TArray<double> effort;

	

	void SetFromROS2(sensor_msgs__msg__JointState rosdata)
	{
    	header_stamp_sec = rosdata.header.stamp.sec;

		header_stamp_nanosec = rosdata.header.stamp.nanosec;

		header_frame_id.AppendChars(rosdata.header.frame_id.data, rosdata.header.frame_id.size);

		for (int i = 0; i < rosdata.name.size; i++)
		{
			name[i].AppendChars(rosdata.name.data[i].data,rosdata.name.data[i].size);
		}

		for (int i = 0; i < rosdata.position.size; i++)
		{
			position[i] = rosdata.position.data[i];
		}

		for (int i = 0; i < rosdata.velocity.size; i++)
		{
			velocity[i] = rosdata.velocity.data[i];
		}

		for (int i = 0; i < rosdata.effort.size; i++)
		{
			effort[i] = rosdata.effort.data[i];
		}

		
	}

	void SetROS2(sensor_msgs__msg__JointState& rosdata) const
	{
    	rosdata.header.stamp.sec = header_stamp_sec;

		rosdata.header.stamp.nanosec = header_stamp_nanosec;

		if (rosdata.header.frame_id.data != nullptr)
		{
			free(rosdata.header.frame_id.data);
		}
		rosdata.header.frame_id.data = (char*)malloc((header_frame_id.Len()+1)*sizeof(char));
		memcpy(rosdata.header.frame_id.data, TCHAR_TO_ANSI(*header_frame_id), (header_frame_id.Len()+1)*sizeof(char));
		rosdata.header.frame_id.size = header_frame_id.Len();
		rosdata.header.frame_id.capacity = header_frame_id.Len() + 1;

		for (int i = 0; i < name.Num(); i++)
		{
			if (rosdata.name.data[i].data != nullptr)
			{
				free(rosdata.name.data[i].data);
			}
			rosdata.name.data[i].data = (char*)malloc((name[i].Len()+1)*sizeof(char));
			memcpy(rosdata.name.data[i].data, TCHAR_TO_ANSI(*name[i]), (name[i].Len()+1)*sizeof(char));
			rosdata.name.data[i].size = name[i].Len();
			rosdata.name.data[i].capacity = name[i].Len() + 1;
		}

		for (int i = 0; i < position.Num(); i++)
		{
			rosdata.position.data[i] = position[i];
		}

		for (int i = 0; i < velocity.Num(); i++)
		{
			rosdata.velocity.data[i] = velocity[i];
		}

		for (int i = 0; i < effort.Num(); i++)
		{
			rosdata.effort.data[i] = effort[i];
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2JointStateMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSJointState Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSJointState& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	sensor_msgs__msg__JointState joint_state_msg;
};