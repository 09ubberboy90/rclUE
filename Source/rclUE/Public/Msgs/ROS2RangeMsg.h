// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/Range.msg - do not modify

#pragma once

#include "CoreMinimal.h"

#include "sensor_msgs/msg/range.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2RangeMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSRange
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int header_stamp_sec;

	unsigned int header_stamp_nanosec;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString header_frame_id;

	uint8 radiation_type;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float field_of_view;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float min_range;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float max_range;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float range;

	

	void SetFromROS2(sensor_msgs__msg__Range rosdata)
	{
    	header_stamp_sec = rosdata.header.stamp.sec;

		header_stamp_nanosec = rosdata.header.stamp.nanosec;

		header_frame_id.AppendChars(rosdata.header.frame_id.data, rosdata.header.frame_id.size);

		radiation_type = rosdata.radiation_type;

		field_of_view = rosdata.field_of_view;

		min_range = rosdata.min_range;

		max_range = rosdata.max_range;

		range = rosdata.range;

		
	}

	void SetROS2(sensor_msgs__msg__Range& rosdata) const
	{
    	rosdata.header.stamp.sec = header_stamp_sec;

		rosdata.header.stamp.nanosec = header_stamp_nanosec;

		if (rosdata.header.frame_id.data != nullptr)
		{
			free(rosdata.header.frame_id.data);
		}
		rosdata.header.frame_id.data = (char*)malloc((header_frame_id.Len()+1)*sizeof(char));
		memcpy(rosdata.header.frame_id.data, TCHAR_TO_ANSI(*header_frame_id), (header_frame_id.Len()+1)*sizeof(char));
		rosdata.header.frame_id.size = header_frame_id.Len();
		rosdata.header.frame_id.capacity = header_frame_id.Len() + 1;

		rosdata.radiation_type = radiation_type;

		rosdata.field_of_view = field_of_view;

		rosdata.min_range = min_range;

		rosdata.max_range = max_range;

		rosdata.range = range;

		
	}
};

UCLASS()
class RCLUE_API UROS2RangeMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSRange Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSRange& Output);
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	sensor_msgs__msg__Range range_msg;
};