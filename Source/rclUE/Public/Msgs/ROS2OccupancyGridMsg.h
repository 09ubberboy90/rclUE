// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from nav_msgs/msg/OccupancyGrid.msg - do not modify

#pragma once

#include <CoreMinimal.h>

#include "nav_msgs/msg/occupancy_grid.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2OccupancyGridMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSOccupancyGrid
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int HeaderStampSec = 0;

	UPROPERTY(EditAnywhere)
	unsigned int HeaderStampNanosec = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString HeaderFrameId;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int InfoMapLoadTimeSec = 0;

	UPROPERTY(EditAnywhere)
	unsigned int InfoMapLoadTimeNanosec = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float InfoResolution = 0.f;

	UPROPERTY(EditAnywhere)
	unsigned int InfoWidth = 0;

	UPROPERTY(EditAnywhere)
	unsigned int InfoHeight = 0;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FVector InfoOriginPosition = FVector::ZeroVector;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FQuat InfoOriginOrientation = FQuat::Identity;

	UPROPERTY(EditAnywhere)
	TArray<int8> Data;

	

	void SetFromROS2(const nav_msgs__msg__OccupancyGrid& in_ros_data)
	{
    	HeaderStampSec = in_ros_data.header.stamp.sec;

		HeaderStampNanosec = in_ros_data.header.stamp.nanosec;

		HeaderFrameId.AppendChars(in_ros_data.header.frame_id.data, in_ros_data.header.frame_id.size);

		InfoMapLoadTimeSec = in_ros_data.info.map_load_time.sec;

		InfoMapLoadTimeNanosec = in_ros_data.info.map_load_time.nanosec;

		InfoResolution = in_ros_data.info.resolution;

		InfoWidth = in_ros_data.info.width;

		InfoHeight = in_ros_data.info.height;

		InfoOriginPosition.X = in_ros_data.info.origin.position.x;
		InfoOriginPosition.Y = in_ros_data.info.origin.position.y;
		InfoOriginPosition.Z = in_ros_data.info.origin.position.z;

		InfoOriginOrientation.X = in_ros_data.info.origin.orientation.x;
		InfoOriginOrientation.Y = in_ros_data.info.origin.orientation.y;
		InfoOriginOrientation.Z = in_ros_data.info.origin.orientation.z;
		InfoOriginOrientation.W = in_ros_data.info.origin.orientation.w;

		for (auto i = 0; i < in_ros_data.data.size; ++i)
		{
			Data.Emplace(in_ros_data.data.data[i]);
		}

		
	}

	void SetROS2(nav_msgs__msg__OccupancyGrid& out_ros_data) const
	{
    	out_ros_data.header.stamp.sec = HeaderStampSec;

		out_ros_data.header.stamp.nanosec = HeaderStampNanosec;

		{
			FTCHARToUTF8 strUtf8( *HeaderFrameId );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.header.frame_id.data != nullptr)
		{
			free(out_ros_data.header.frame_id.data);
		}
		out_ros_data.header.frame_id.data = (decltype(out_ros_data.header.frame_id.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.header.frame_id.data)));
		memcpy(out_ros_data.header.frame_id.data, TCHAR_TO_UTF8(*HeaderFrameId), (strLength+1)*sizeof(char));
			out_ros_data.header.frame_id.size = strLength;
			out_ros_data.header.frame_id.capacity = strLength + 1;
		}

		out_ros_data.info.map_load_time.sec = InfoMapLoadTimeSec;

		out_ros_data.info.map_load_time.nanosec = InfoMapLoadTimeNanosec;

		out_ros_data.info.resolution = InfoResolution;

		out_ros_data.info.width = InfoWidth;

		out_ros_data.info.height = InfoHeight;

		out_ros_data.info.origin.position.x = InfoOriginPosition.X;
		out_ros_data.info.origin.position.y = InfoOriginPosition.Y;
		out_ros_data.info.origin.position.z = InfoOriginPosition.Z;

		out_ros_data.info.origin.orientation.x = InfoOriginOrientation.X;
		out_ros_data.info.origin.orientation.y = InfoOriginOrientation.Y;
		out_ros_data.info.origin.orientation.z = InfoOriginOrientation.Z;
		out_ros_data.info.origin.orientation.w = InfoOriginOrientation.W;

		if (out_ros_data.data.data != nullptr)
		{
			free(out_ros_data.data.data);
		}
		out_ros_data.data.data = (decltype(out_ros_data.data.data))malloc((Data.Num())*sizeof(decltype(*out_ros_data.data.data)));
		
		for (auto i = 0; i < Data.Num(); ++i)
		{
			out_ros_data.data.data[i] = Data[i];
		}

		out_ros_data.data.size = Data.Num();
		out_ros_data.data.capacity = Data.Num();

		
	}
};

UCLASS()
class RCLUE_API UROS2OccupancyGridMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSOccupancyGrid& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSOccupancyGrid& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	nav_msgs__msg__OccupancyGrid occupancy_grid_msg;
};