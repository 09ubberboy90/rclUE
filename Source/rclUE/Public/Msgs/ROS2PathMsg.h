// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from nav_msgs/Path.msg - do not modify

#pragma once

#include "CoreMinimal.h"

#include "nav_msgs/msg/path.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2PathMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSPath
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int header_stamp_sec;

	unsigned int header_stamp_nanosec;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString header_frame_id;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<int> poses_header_stamp_sec;

	TArray<unsigned int> poses_header_stamp_nanosec;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> poses_header_frame_id;

	TArray<double> poses_pose_position_x;

	TArray<double> poses_pose_position_y;

	TArray<double> poses_pose_position_z;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FQuat> poses_pose_orientation;

	

	void SetFromROS2(nav_msgs__msg__Path rosdata)
	{
    	header_stamp_sec = rosdata.header.stamp.sec;

		header_stamp_nanosec = rosdata.header.stamp.nanosec;

		header_frame_id.AppendChars(rosdata.header.frame_id.data, rosdata.header.frame_id.size);

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_header_stamp_sec[i] = rosdata.poses.data[i].header.stamp.sec;
		}

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_header_stamp_nanosec[i] = rosdata.poses.data[i].header.stamp.nanosec;
		}

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_header_frame_id[i].AppendChars(rosdata.poses.data[i].header.frame_id.data,rosdata.poses.data[i].header.frame_id.size);
		}

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_pose_position_x[i] = rosdata.poses.data[i].pose.position.x;
		}

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_pose_position_y[i] = rosdata.poses.data[i].pose.position.y;
		}

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_pose_position_z[i] = rosdata.poses.data[i].pose.position.z;
		}

		for (int i = 0; i < rosdata.poses.size; i++)
		{
			poses_pose_orientation[i].X = rosdata.poses.data[i].pose.orientation.x;
			poses_pose_orientation[i].Y = rosdata.poses.data[i].pose.orientation.y;
			poses_pose_orientation[i].Z = rosdata.poses.data[i].pose.orientation.z;
			poses_pose_orientation[i].W = rosdata.poses.data[i].pose.orientation.w;
		}

		
	}

	void SetROS2(nav_msgs__msg__Path& rosdata) const
	{
    	rosdata.header.stamp.sec = header_stamp_sec;

		rosdata.header.stamp.nanosec = header_stamp_nanosec;

		if (rosdata.header.frame_id.data != nullptr)
		{
			free(rosdata.header.frame_id.data);
		}
		rosdata.header.frame_id.data = (char*)malloc((header_frame_id.Len()+1)*sizeof(char));
		memcpy(rosdata.header.frame_id.data, TCHAR_TO_ANSI(*header_frame_id), (header_frame_id.Len()+1)*sizeof(char));
		rosdata.header.frame_id.size = header_frame_id.Len();
		rosdata.header.frame_id.capacity = header_frame_id.Len() + 1;

		for (int i = 0; i < poses_header_stamp_sec.Num(); i++)
		{
			rosdata.poses.data[i].header.stamp.sec = poses_header_stamp_sec[i];
		}

		for (int i = 0; i < poses_header_stamp_nanosec.Num(); i++)
		{
			rosdata.poses.data[i].header.stamp.nanosec = poses_header_stamp_nanosec[i];
		}

		for (int i = 0; i < poses_header_frame_id.Num(); i++)
		{
			if (rosdata.poses.data[i].header.frame_id.data != nullptr)
			{
				free(rosdata.poses.data[i].header.frame_id.data);
			}
			rosdata.poses.data[i].header.frame_id.data = (char*)malloc((poses_header_frame_id[i].Len()+1)*sizeof(char));
			memcpy(rosdata.poses.data[i].header.frame_id.data, TCHAR_TO_ANSI(*poses_header_frame_id[i]), (poses_header_frame_id[i].Len()+1)*sizeof(char));
			rosdata.poses.data[i].header.frame_id.size = poses_header_frame_id[i].Len();
			rosdata.poses.data[i].header.frame_id.capacity = poses_header_frame_id[i].Len() + 1;
		}

		for (int i = 0; i < poses_pose_position_x.Num(); i++)
		{
			rosdata.poses.data[i].pose.position.x = poses_pose_position_x[i];
		}

		for (int i = 0; i < poses_pose_position_y.Num(); i++)
		{
			rosdata.poses.data[i].pose.position.y = poses_pose_position_y[i];
		}

		for (int i = 0; i < poses_pose_position_z.Num(); i++)
		{
			rosdata.poses.data[i].pose.position.z = poses_pose_position_z[i];
		}

		for (int i = 0; i < poses_pose_orientation.Num(); i++)
		{
			rosdata.poses.data[i].pose.orientation.x = poses_pose_orientation[i].X;
			rosdata.poses.data[i].pose.orientation.y = poses_pose_orientation[i].Y;
			rosdata.poses.data[i].pose.orientation.z = poses_pose_orientation[i].Z;
			rosdata.poses.data[i].pose.orientation.w = poses_pose_orientation[i].W;
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2PathMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSPath Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSPath& Output);
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	nav_msgs__msg__Path path_msg;
};