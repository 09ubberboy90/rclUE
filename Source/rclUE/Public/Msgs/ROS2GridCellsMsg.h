// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from nav_msgs/GridCells.msg - do not modify

#pragma once

#include "CoreMinimal.h"

#include "nav_msgs/msg/grid_cells.h"

#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2GridCellsMsg.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSGridCells
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int header_stamp_sec;

	unsigned int header_stamp_nanosec;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString header_frame_id;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float cell_width;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float cell_height;

	TArray<double> cells_x;

	TArray<double> cells_y;

	TArray<double> cells_z;

	

	void SetFromROS2(nav_msgs__msg__GridCells rosdata)
	{
    	header_stamp_sec = rosdata.header.stamp.sec;

		header_stamp_nanosec = rosdata.header.stamp.nanosec;

		header_frame_id.AppendChars(rosdata.header.frame_id.data, rosdata.header.frame_id.size);

		cell_width = rosdata.cell_width;

		cell_height = rosdata.cell_height;

		for (int i = 0; i < rosdata.cells.size; i++)
		{
			cells_x[i] = rosdata.cells.data[i].x;
		}

		for (int i = 0; i < rosdata.cells.size; i++)
		{
			cells_y[i] = rosdata.cells.data[i].y;
		}

		for (int i = 0; i < rosdata.cells.size; i++)
		{
			cells_z[i] = rosdata.cells.data[i].z;
		}

		
	}

	void SetROS2(nav_msgs__msg__GridCells& rosdata) const
	{
    	rosdata.header.stamp.sec = header_stamp_sec;

		rosdata.header.stamp.nanosec = header_stamp_nanosec;

		if (rosdata.header.frame_id.data != nullptr)
		{
			free(rosdata.header.frame_id.data);
		}
		rosdata.header.frame_id.data = (char*)malloc((header_frame_id.Len()+1)*sizeof(char));
		memcpy(rosdata.header.frame_id.data, TCHAR_TO_ANSI(*header_frame_id), (header_frame_id.Len()+1)*sizeof(char));
		rosdata.header.frame_id.size = header_frame_id.Len();
		rosdata.header.frame_id.capacity = header_frame_id.Len() + 1;

		rosdata.cell_width = cell_width;

		rosdata.cell_height = cell_height;

		for (int i = 0; i < cells_x.Num(); i++)
		{
			rosdata.cells.data[i].x = cells_x[i];
		}

		for (int i = 0; i < cells_y.Num(); i++)
		{
			rosdata.cells.data[i].y = cells_y[i];
		}

		for (int i = 0; i < cells_z.Num(); i++)
		{
			rosdata.cells.data[i].z = cells_z[i];
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2GridCellsMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSGridCells Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSGridCells& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	nav_msgs__msg__GridCells grid_cells_msg;
};